pipeline {
    agent any
    environment {
        EC2_IP = "52.90.186.240"
        EC2_USER = "ubuntu"
        REMOTE_DIR = "/home/ubuntu/Django_CICD"
        REPO_URL = "https://github.com/namrqthakaipa/Django_Project.git"
    }

    stages {
        stage('Clone or Pull from Git on EC2') {
            steps {
                sshagent(['Djangocicd-EC2']) {
                    sh """
                    ssh -o StrictHostKeyChecking=no $EC2_USER@$EC2_IP << EOF
                        if [ ! -d "$REMOTE_DIR/.git" ]; then
                            git clone $REPO_URL $REMOTE_DIR
                        else
                            cd $REMOTE_DIR
                            git pull origin main
                        fi
                    EOF
                    """
                }
            }
        }

        stage('Set Up Python Environment') {
            steps {
                sshagent(['Djangocicd-EC2']) {
                    sh """
                    ssh -o StrictHostKeyChecking=no $EC2_USER@$EC2_IP << EOF
                        cd $REMOTE_DIR
                        python3 -m venv env
                        source env/bin/activate
                        pip install --upgrade pip
                        pip install -r requirements.txt
                    EOF
                    """
                }
            }
        }

        stage('Run Migrations & Collect Static') {
            steps {
                sshagent(['Djangocicd-EC2']) {
                    sh """
                    ssh -o StrictHostKeyChecking=no $EC2_USER@$EC2_IP << EOF
                        cd $REMOTE_DIR
                        source env/bin/activate
                        python3 manage.py makemigrations
                        python3 manage.py migrate
                        python3 manage.py collectstatic --noinput
                    EOF
                    """
                }
            }
        }

          stage('Install Gunicorn & Nginx if Needed') {
        steps {
            sshagent(['Djangocicd-EC2']) {
                sh """
                ssh -o StrictHostKeyChecking=no $EC2_USER@$EC2_IP << EOF
                    sudo apt update
                    sudo apt install -y nginx
                    source $REMOTE_DIR/env/bin/activate
                    pip install gunicorn
                EOF
                """
            }
        }
    }


        stage('Start Gunicorn & Nginx') {
            steps {
                sshagent(['Djangocicd-EC2']) {
                    sh """
                    ssh -o StrictHostKeyChecking=no $EC2_USER@$EC2_IP << EOF
                        sudo systemctl restart gunicorn
                        sudo systemctl restart nginx
                    EOF
                    """
                }
            }
        }
    }
}
